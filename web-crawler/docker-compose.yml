version: '3.8'

services:

  # Kafka hizmeti, Kafka sunucusunu baslatir.
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-broker
    depends_on:
      - zookeeper
    ports:
      - 9092:9092  # Kafka'ya disaridan erisim saglar.
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  # ZooKeeper hizmeti, Kafka icin koordinasyon ve konfigurasyon depolama saglar.
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZK_SERVER_HEAP: "-Xmx256M -Xms256M"
    ports:
      - 52181:2181

  # Kafka Connect hizmeti, Kafka veri akislarini kaydetmek ve islemek icin kullanilir.
  kafka_connect:
    container_name: kafka_connect
    image: debezium/connect
    links:
      - db
      - kafka
    ports:
      - '8083:8083'
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=medium_debezium
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses

  # Kafka tracking
  redpanda:
    image: docker.redpanda.com/redpandadata/console:latest
    restart: always
    container_name: redpanda
    environment:
      KAFKA_BROKERS: kafka:9092  # Kafka broker'larının adresini belirtir.
    ports:
      - 8092:8092

  # Veritabani hizmeti, ornek bir PostgreSQL veritabanini baslatir.
  db:
    image: debezium/example-postgres
    platform: linux/x86_64
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: toor
    ports:
      - 5432:5432
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/create-db-tables.sql
